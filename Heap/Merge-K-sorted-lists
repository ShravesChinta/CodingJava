/***

You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.

 

Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []

***/

class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
       PriorityQueue<Integer> minheap=new PriorityQueue<>();
       for(ListNode head:lists)
       {
           while(head!=null)
           {
               minheap.add(head.val);
               head=head.next;
           }
       } 
       ListNode new_list=new ListNode(0);
       ListNode merge_head=new_list;
       while(minheap.size()>0)
       {
           new_list.next=new ListNode(minheap.remove());
           new_list=new_list.next;
       }
       return merge_head.next;
    }
}

