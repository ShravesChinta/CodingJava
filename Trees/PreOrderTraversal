/***

Given the root of a binary tree, return the preorder traversal of its nodes' values.

 

Example 1:


Input: root = [1,null,2,3]
Output: [1,2,3]
Example 2:

Input: root = []
Output: []
Example 3:

Input: root = [1]
Output: [1]

***/

class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> preorder=new ArrayList<>();
        preordertraversal(root,preorder);
        return preorder;
    }

    public void preordertraversal(TreeNode root,List<Integer> preorder)
    {
        if(root==null)
        return;
        preorder.add(root.val);
        preordertraversal(root.left,preorder);
        preordertraversal(root.right,preorder);
    } 
}
