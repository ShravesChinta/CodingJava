/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
        return maxdepth(root,0);
    }

    public int maxdepth(TreeNode root, int depth)
    {
        if(root==null)
        return depth;

        if(root.left==null)
        return maxdepth(root.right, depth+1);

        if(root.right==null)
        return maxdepth(root.left, depth+1);

        return Math.max(maxdepth(root.left, depth), maxdepth(root.right, depth))+1;
    }
}


or 

class Solution {
    public int maxDepth(TreeNode root) {
        return maxdepth(root,0);
    }

    public int maxdepth(TreeNode root, int depth)
    {
        if(root==null)
        return depth;

        return Math.max(maxdepth(root.left, depth), maxdepth(root.right, depth))+1;
    }
}
